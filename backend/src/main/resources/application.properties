@@ -1,13 +1,20 @@
spring.application.name=backend
server.port=8080

# Database configuration (read from environment)
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# Optional Hibernate config
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Redis connection settings
spring.data.redis.host=localhost
spring.data.redis.port=6379
# If your Redis instance requires a password
# spring.data.redis.password=your_password

# Kafka Broker connection settings
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:29092}

# Producer configuration (for sending messages)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer configuration (for receiving messages) JUST A SAMPLE TBC
spring.kafka.consumer.group-id=clinic-queue-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# HikariCP connection pool
# Match Supabase shared pooler limit
spring.datasource.hikari.maximum-pool-size=1
spring.datasource.hikari.minimum-idle=1

# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# # Log connection pool stats
# logging.level.com.zaxxer.hikari=DEBUG
# spring.datasource.hikari.leak-detection-threshold=60000
